# .github/workflows/sync-upstream.yml
name: Sync Upstream

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write # needed to push commits

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure "upstream" remote exists
        run: |
          if git remote | grep -q '^upstream$'; then
            echo "✅ upstream already exists, skipping add."
          else
            echo "➕ upstream missing, adding now…"
            git remote add upstream https://github.com/danny-avila/LibreChat.git
          fi

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
 
      - name: Defining protectedForkPaths
        run: |
          protectedForkPaths=(
            "client/src/plugin-runtime"
            "plugins"
            "scripts"
            "codemods"
            ".bun-version"
            "README.md"
            ".github/workflows"
            "config/config.json"
          )
 
      - name: "🔒 Stashing protected files..."
        run: |
          tmp=$(mktemp -d)
          for path in "${protectedForkPaths[@]}"; do
            if [ -e "$path" ]; then
              mkdir -p "$tmp/$(dirname "$path")"
              cp -R "$path" "$tmp/$path"
              echo "  • $path"
            fi
          done
 
      - name: "📡 Fetching upstream and resetting to pristine state..."
        run: |
          git fetch upstream main
          git checkout main
          git reset --hard upstream/main
          git clean -fdx
 
      - name: "🗑️ Cleaning up JS lockfiles…"
        run: find . -maxdepth 2 -type f \( -name 'package-lock.json' -o -name 'yarn.lock' -o -name 'pnpm-lock.yaml' -o -name 'bun.lockb' \) -print -exec rm -f {} +
        
      - name: "🔍 Checking for any upstream-provided protected paths..."
        run: |
          upstream_changed=false
          for path in "${protectedForkPaths[@]}"; do
            if [ -e "$path" ]; then
              echo "⚠️  Upstream introduced protected path: $path"
              upstream_changed=true
            fi
          done 
          if ! $upstream_changed; then
            echo "✅ No upstream changes detected in protected paths."
          fi
      - name: "🔄 Restoring protected files from stash..."
        run: |
          for path in "${protectedForkPaths[@]}"; do
            # remove whatever upstream put there (if anything)
            rm -rf "$path"
            # restore from our stash
            if [ -e "$tmp/$path" ]; then
              mkdir -p "$(dirname "$path")"
              cp -R "$tmp/$path" "$path"
              echo "   • Restored $path"
            else
              echo "   • ⚠️  Missing in stash (was not a protected file?): $path"
            fi
          done
          # clean up temp stash
          rm -rf "$tmp"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: '.bun-version'
          
      - name: "📦 Update package.json dependencies"
        run: bun run scripts/update-packagejson.js
        
      - name: "⚙️ Installing dependencies…"
        run: bun install

      - name: "🔧 Apply insert-pluginloader.js codemod"
        run: bun run jscodeshift \
          --parser=tsx \
          --extensions=tsx,ts,js,jsx \
          -t codemods/insert-pluginloader.js \
          client/src/main.jsx

      - name: "🔧 Apply insert-vite-config.js codemod"
        run: bun run jscodeshift \
          --parser=tsx \
          --extensions=ts,tsx,js,jsx \
          -t codemods/insert-vite-config.js \
          client/vite.config.ts

      - name: "🔧 Apply inline-pluginserver-elysia.js codemod"
        run: bun run jscodeshift \
          --parser=tsx \
          --extensions=ts,tsx,js,jsx \
          -t codemods/inline-pluginserver-elysia.js\
          api/app/index.js

      - name: "🔧 Apply inject-otel-bun.js codemod"
        run: bun run jscodeshift \
          --parser=tsx \
          --extensions=ts,tsx,js,jsx \
          -t codemods/inject-otel-bun.js \
          api/app/index.js

      - name: "🔧 Apply replace-fs-with-bun-io.js codemod"
        run: bun run jscodeshift \
          --parser=tsx \
          --extensions=ts,tsx,js,jsx \
          -t codemods/replace-fs-with-bun-io.js \
          .

      - name: "🔧 Apply update-index-html.js codemod"
        run: bun run scripts/update-index-html.js

      - name: "📂 Clean install of api/app dependencies"
        run: bun install --cwd api/app
      - name: "📂 Clean install of client dependencies"
        run: bun install --cwd client
      - name: "💾 Commit & push changes"
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: "github-actions"
          author_email: "actions@github.com"
          message: "chore: bun+elysia full migration + bun-native I/O + OTEL"
          push: true
