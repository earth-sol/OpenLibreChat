# .github/workflows/sync-upstream.yml
name: Sync Upstream

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write # needed to push commits

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure "upstream" remote exists
        run: |
          if git remote | grep -q '^upstream$'; then
            echo "‚úÖ upstream already exists, skipping add."
          else
            echo "‚ûï upstream missing, adding now‚Ä¶"
            git remote add upstream https://github.com/danny-avila/LibreChat.git
          fi

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
 
      - name: Defining protectedForkPaths
        run: |
          protectedForkPaths=(
            "client/src/plugin-runtime"
            "plugins"
            "scripts"
            "codemods"
            ".bun-version"
            "README.md"
            ".github/workflows/sync-upstream.yml"
            "config/config.json"
          )
 
      - name: "üîí Stashing protected files..."
        run: |
          tmp=$(mktemp -d)
          for path in "${protectedForkPaths[@]}"; do
            if [ -e "$path" ]; then
              mkdir -p "$tmp/$(dirname "$path")"
              cp -R "$path" "$tmp/$path"
              echo "  ‚Ä¢ $path"
            fi
          done
 
      - name: "üì° Fetching upstream and resetting to pristine state..."
        run: |
          # git fetch upstream main
          # git checkout main
          # git reset --hard upstream/main
          # git clean -fdx
          git pull --rebase upstream main
 
      - name: "üóëÔ∏è Cleaning up JS lockfiles‚Ä¶"
        run: find . -maxdepth 2 -type f \( -name 'package-lock.json' -o -name 'yarn.lock' -o -name 'pnpm-lock.yaml' -o -name 'bun.lockb' \) -print -exec rm -f {} +
        
      - name: "üîç Checking for any upstream-provided protected paths..."
        run: |
          upstream_changed=false
          for path in "${protectedForkPaths[@]}"; do
            if [ -e "$path" ]; then
              echo "‚ö†Ô∏è  Upstream introduced protected path: $path"
              upstream_changed=true
            fi
          done 
          if ! $upstream_changed; then
            echo "‚úÖ No upstream changes detected in protected paths."
          fi
      - name: "üîÑ Restoring protected files from stash..."
        run: |
          for path in "${protectedForkPaths[@]}"; do
            # remove whatever upstream put there (if anything)
            rm -rf "$path"
            # restore from our stash
            if [ -e "$tmp/$path" ]; then
              mkdir -p "$(dirname "$path")"
              cp -R "$tmp/$path" "$path"
              echo "   ‚Ä¢ Restored $path"
            else
              echo "   ‚Ä¢ ‚ö†Ô∏è  Missing in stash (was not a protected file?): $path"
            fi
          done
          # clean up temp stash
          rm -rf "$tmp"

      - name: "üíæ Commit & push changes"
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: "github-actions"
          author_email: "actions@github.com"
          message: "chore: sync upstream complete"
          push: true
          tag_push: '--force'
