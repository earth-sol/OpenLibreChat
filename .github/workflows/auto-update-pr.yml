# .github/workflows/auto-update-pr.yml
name: Auto Update and PR

on:
#  schedule:
#    - cron: '0 3 * * *'    # Daily at 03:00 UTC
  workflow_dispatch:
    inputs:
      bump_version:
        description: 'Whether to bump patch version'
        required: false
        default: 'true'
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-update:
    runs-on: ubuntu-latest
    env:
      BUMP_VERSION: ${{ inputs.bump_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Run Codemods First
        run: bun scripts/run-codemods.js --verbose

      - name: Install All Dependencies
        run: bun scripts/bun-install-all.js

#      - name: Check Package Updates
#        run: bun scripts/check-updates.js --format=json --dry-run

      - name: Run Tests (Pre-build)
        run: bun scripts/bun-test-all.js --phase=prebuild || echo "Pre-build tests failed, continuing"

      - name: Build All Projects
        run: bun scripts/bun-build-all.js

      - name: Run Tests (Post-build)
        run: bun scripts/bun-test-all.js --phase=postbuild || echo "Post-build tests failed, continuing"

#      - name: Build Docker Image
#        run: bun scripts/docker-build.js --tag=nightly

      - name: Check for Changes
        id: git-status
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          if git diff --quiet; then
            echo "no_changes=true" >> $GITHUB_ENV
          else
            echo "no_changes=false" >> $GITHUB_ENV
          fi

#      - name: Bump Patch Version Across All Packages
#        if: env.no_changes == 'false' && env.BUMP_VERSION == 'true'
#        id: bump
#        run: |
#          NEW_VER=$(bun run scripts/bump-version.js)
#          echo "new_version=$NEW_VER" >> $GITHUB_ENV

      - name: Create Branch & Commit Updates
        if: env.no_changes == 'false'
        run: |
          BRANCH="chore/auto-update-$(date +'%Y%m%d')"
          git checkout -b "$BRANCH"

          # Prepare commit message and stage files
          if [ "$BUMP_VERSION" = "true" ]; then
            # bump-version step has run
            MSG="chore: automated dependency update & bump to v${{ env.new_version }} ($(date +'%Y-%m-%d'))"
            git add package.json **/package.json
          else
            MSG="chore: automated dependency update ($(date +'%Y-%m-%d'))"
          fi

          # Stage any other changes (codemods, lockfiles, etc)
          git add -A

          git commit -m "$MSG"
          git push origin "$BRANCH"

          # Expose PR title
          echo "PR_TITLE=$MSG" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.no_changes == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          branch: ${{ github.head_ref || format('chore/auto-update-{0}', github.run_id) }}
          title: ${{ env.PR_TITLE }}
          body: |
            This PR was automatically created by the LibreChat Bun orchestrator.

            - Dependency updates  
            - Codemod transformations  
            - ${{ env.BUMP_VERSION == 'true' && format('Version bumped to v{0}', env.new_version) || 'No version bump requested' }}  
            - Full build & test passed  
          commit-message: ${{ env.PR_TITLE }}
          labels: |
            chore
            automated